{"version":3,"sources":["components/Covid.jsx","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","active","setActive","recovered","setRecovered","deaths","setDeaths","lastUpdated","setLastUpdated","input","setInput","states","findStates","activeByState","setActiveByState","recoveredByState","setRecoveredByState","deathsByState","setDeathsByState","searchStateName","setSearchStateName","getCovidData","a","fetch","response","json","actualData","console","log","statewise","lastupdatedtime","allStates","map","val","push","state","shift","StatesOfIndia","i","length","title","index","findIndex","x","useEffect","border","textAlign","color","fontFamily","cardBg","width","heading","digits","className","style","marginTop","class","Autocomplete","margin","marginBottom","id","debug","options","option","renderInput","params","TextField","label","inputProps","onChange","event","value","paddingBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.159ab6ef.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./Covid.css\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst Covid = () => {\r\n  const [active, setActive] = useState(\"\");\r\n  const [recovered, setRecovered] = useState(\"\");\r\n  const [deaths, setDeaths] = useState(\"\");\r\n  const [lastUpdated, setLastUpdated] = useState(\"\");\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [states, findStates] = useState([]);\r\n\r\n  const [activeByState, setActiveByState] = useState(\"\");\r\n  const [recoveredByState, setRecoveredByState] = useState(\"\");\r\n  const [deathsByState, setDeathsByState] = useState(\"\");\r\n\r\n  const [searchStateName, setSearchStateName] = useState(\"Assam\");\r\n\r\n  const getCovidData = async () => {\r\n    try {\r\n      const response = await fetch(\"https://api.covid19india.org/data.json\");\r\n      const actualData = await response.json();\r\n\r\n      console.log(actualData);\r\n\r\n      setActive(actualData.statewise[0].active);\r\n      setRecovered(actualData.statewise[0].recovered);\r\n      setDeaths(actualData.statewise[0].deaths);\r\n      setLastUpdated(actualData.statewise[0].lastupdatedtime);\r\n\r\n      // console.log(actualData.statewise);\r\n      var allStates = [];\r\n      actualData.statewise.map((val) => {\r\n        allStates.push(val.state);\r\n      });\r\n      allStates.shift();\r\n\r\n      var StatesOfIndia = [];\r\n      for (var i = 0; i < allStates.length; i++) {\r\n        StatesOfIndia.push({\r\n          title: allStates[i],\r\n        });\r\n      }\r\n\r\n      findStates(StatesOfIndia);\r\n\r\n      var index =\r\n        StatesOfIndia.findIndex((x) => x.title === searchStateName) + 1;\r\n\r\n      if (index === 0) {\r\n        index = 4;\r\n      }\r\n\r\n      setActiveByState(actualData.statewise[index].active);\r\n      setRecoveredByState(actualData.statewise[index].recovered);\r\n      setDeathsByState(actualData.statewise[index].deaths);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCovidData();\r\n  }, [searchStateName]);\r\n\r\n  const border = {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontFamily: \"Amaranth\",\r\n  };\r\n\r\n  const cardBg = {\r\n    width: \"auto\",\r\n    border: \"1px solid rgb(226 52 52 / 81%)\",\r\n  };\r\n\r\n  const heading = {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontFamily: \"Black Han Sans\",\r\n  };\r\n\r\n  const digits = {\r\n    fontFamily: \"Bungee\",\r\n  };\r\n\r\n  const myInput = (event, value) => {\r\n    setInput(value);\r\n    setSearchStateName(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ marginTop: \"2rem\" }}>\r\n        <h1 style={heading}>COVID-19 Tracker</h1>\r\n        <h3 style={heading}>India</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col\" style={border}>\r\n            <h5 class=\"card-title\">\r\n              <b>Active Cases</b>\r\n            </h5>\r\n            <div className=\"card bg-transparent\" style={cardBg}>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\" style={digits}>\r\n                  {active}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\" style={border}>\r\n            <h5 class=\"card-title\">\r\n              <b>Total Recoverd</b>\r\n            </h5>\r\n            <div className=\"card bg-transparent\" style={cardBg}>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\" style={digits}>\r\n                  {recovered}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\" style={border}>\r\n            <h5 class=\"card-title\">\r\n              <b>Total Deaths</b>\r\n            </h5>\r\n            <div className=\"card bg-transparent\" style={cardBg}>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\" style={digits}>\r\n                  {deaths}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* autocomplete */}\r\n        <Autocomplete\r\n          style={{\r\n            width: \"50%\",\r\n            margin: \"0 auto\",\r\n            marginTop: \"3rem\",\r\n            marginBottom: \"3rem\",\r\n          }}\r\n          id=\"debug\"\r\n          debug\r\n          options={states.map((option) => option.title)}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Search by state\" margin=\"normal\" />\r\n          )}\r\n          inputProps={{ className: \"test\" }}\r\n          onChange={myInput}\r\n          value={input}\r\n        />\r\n        {searchStateName ? (\r\n          <h4 style={heading}>{searchStateName}</h4>\r\n        ) : (\r\n          <h4 style={heading}>Assam</h4>\r\n        )}\r\n        <div className=\"row\">\r\n          <div className=\"col\" style={border}>\r\n            <h5 class=\"card-title\">\r\n              <b>Active Cases</b>\r\n            </h5>\r\n            <div className=\"card bg-transparent\" style={cardBg}>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\" style={digits}>\r\n                  {activeByState}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\" style={border}>\r\n            <h5 class=\"card-title\">\r\n              <b>Total Recoverd</b>\r\n            </h5>\r\n            <div className=\"card bg-transparent\" style={cardBg}>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\" style={digits}>\r\n                  {recoveredByState}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\" style={border}>\r\n            <h5 class=\"card-title\">\r\n              <b>Total Deaths</b>\r\n            </h5>\r\n            <div className=\"card bg-transparent\" style={cardBg}>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\" style={digits}>\r\n                  {deathsByState}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n          <div\r\n            className=\"col-6\"\r\n            style={{\r\n              width: \"50%\",\r\n              marginTop: \"5rem\",\r\n              textAlign: \"center\",\r\n              fontFamily: \"Amaranth\",\r\n              paddingBottom: \"20px\",\r\n            }}\r\n          >\r\n            <b>Last Updated:</b> {lastUpdated}\r\n          </div>\r\n          <div className=\"col-3\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","import Covid from './components/Covid'\n\nfunction App() {\n  return (\n    <>\n      <Covid />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './indexBackground.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}